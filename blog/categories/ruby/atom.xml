<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | My Blog]]></title>
  <link href="http://www.noppanit.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://www.noppanit.com/"/>
  <updated>2015-10-02T07:40:36-04:00</updated>
  <id>http://www.noppanit.com/</id>
  <author>
    <name><![CDATA[Noppanit Charassinvichai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lesson Learnt From Data Cleansing. Part I]]></title>
    <link href="http://www.noppanit.com/lesson-learnt-from-data-cleansing/"/>
    <updated>2013-02-07T00:00:00-05:00</updated>
    <id>http://www.noppanit.com/lesson-learnt-from-data-cleansing</id>
    <content type="html"><![CDATA[<p>Lately, I have been experimenting on <a href="http://www.kaggle.com/c/event-recommendation-engine-challenge">Kaggle competition</a>. This is the one I chose because I want to use neo4j to give some recommendation or in a sense I want to do unsupervised learning. From day one I faced a lot of problem dealing with a lot of data and they are not clean in a way. For example, in this competition, there is users dataset which contains all the users. And there is a friend dataset which contains all the friends. The data look like this.</p>

<p><img src="http://www.noppanit.com/wp-content/uploads/2013/02/Screen-shot-2013-02-01-at-00.08.50.png" alt="users dataset" class="aligncenter size-full wp-image-1028 cool_border" /></p>

<p><img src="http://www.noppanit.com/wp-content/uploads/2013/02/Screen-shot-2013-02-01-at-00.08.28.png" alt="friends dataset" class="aligncenter size-full wp-image-1029 cool_border" /></p>

<p>The first dataset I could dump everything into neo4j without any problem because it&#8217;s just 30000 records it only took me 5 mins to do it. However, the second dataset was kind of a problem because the column <strong>friends</strong> not all of the ids exist in users database which means the users don&#8217;t exist. So, I had to check if the ids exist in user dataset or not. It turned out that the friends dataset is quite large (about 50 MB) and it could be 3000 ids in one column. So, my first thought would be just to do it one by one.</p>

<p><strong>Frist attempt</strong><br/>
So, what I did first was to dump the whole users dataset to neo4j. And then for loop to check if id exists then insert if not just ignore it. I used cypher to check if the id exists. It turned out that I left my computer for 24 hours and it went just only 10% of the data. It was really slow. One thing from this was that I used neography which means it&#8217;s using REST api which usually it&#8217;s slower than embedded code. And I couldn&#8217;t wait for a whole week just to import the data. So, I moved on. The slow part was the checking every time so I guess it would be nice to clean the data before I dump that to neo4j.</p>

<p><strong>Second attempt</strong><br/>
I tried to use Google Refine to cross check two datasets but it couldn&#8217;t even pass the stage <strong>&#8220;split multi-valued cells&#8221;</strong> which to split column values to rows. Google Refine uses too much ram. I even tried to start EC2 instance but it froze along the way as well. I posted the question and got the solution <a href="http://stackoverflow.com/questions/14636919/google-refine-cross-reference-between-row-and-column">here</a></p>

<p><strong>Third attempt</strong><br/>
I used MySQL to join the tables and and check if the ids exist. Dumping all the data to MySQL was pretty easy my plain old PHP and MySQL. It turned out the friends dataset got around 38 Million rows. And here&#8217;s the script I used to check if the id doesn&#8217;t exit spit it out and delete it.</p>

<pre><code> SELECT uf.id, uf.friend_id, u.user_id FROM eventify.UserFriends uf LEFT JOIN eventify.Users u on uf.friend_id = u.user_id WHERE u.user_id is NULL LIMIT 1
</code></pre>

<p>It was also really slow since I just use my Macbook and didn&#8217;t even turn MySQL performance. So I moved on again.</p>

<p><strong>Final attempt</strong><br/>
I couldn&#8217;t believe that this will be the simplest and most effective way. What I did was to dump the whole users dataset to <strong>Hash</strong> in Ruby and check the friends dataset which surprisingly it only took Ruby 10 mins to do that. Then it only took Ruby and neo4j around 2 hours to import the cleaned data.</p>

<blockquote><p>So lesson learnt for me was if anything can be done in memory do that first.</p></blockquote>

<p>I&#8217;ll try to dump the rest in and blog about how did I get on with recommendation engine from neo4j.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Defalter Compression for Sinatra on Heroku]]></title>
    <link href="http://www.noppanit.com/enable-defalter-compression-for-sinatra-on-herok/"/>
    <updated>2013-01-15T00:00:00-05:00</updated>
    <id>http://www.noppanit.com/enable-defalter-compression-for-sinatra-on-herok</id>
    <content type="html"><![CDATA[<p>You guys must have heard about PageSpeed test from Google. It&#8217;s a really cool plugin for Chrome to let you know how you can optimize your webpage faster. I have been using it for a while but I couldn&#8217;t get my head around gzip compression which it seems that Google has taken that seriously. If you want the science bit. Here&#8217;s the <a href="https://developers.google.com/speed/articles/gzip" title="gzip">article</a> from Google.</p>

<p>And here&#8217;s the quickstart bit. The most simplest way is to put the compression in <strong>config.ru</strong></p>

<pre><code class="ruby">require './server'
use Rack::Deflater
run Sinatra::Application
</code></pre>

<p>And that&#8217;s it I hope this will save you sometime.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DIY : Run RSpec Test Inside Sublime Text 2]]></title>
    <link href="http://www.noppanit.com/diy-run-rspec-test-inside-sublime-text-2/"/>
    <updated>2012-12-30T00:00:00-05:00</updated>
    <id>http://www.noppanit.com/diy-run-rspec-test-inside-sublime-text-2</id>
    <content type="html"><![CDATA[<p>I guess everybody loves Sublime Text2. I switched from TextMate to Sublime Text 2 and I absolutely love it. Now, when you are writing some tests and want to run it immediately rather than keep switching windows to your terminal you can run your spec inside Sublime Text 2.</p>

<p>There are lots of Packages out there you can just install and use it, but I just wanted to show another way of doing it. You could write your own little Package as well.</p>

<p>Sublime Text 2 comes with a nice functionality called <a href="http://docs.sublimetext.info/en/latest/file_processing/build_systems.html" title="Sublime Text 2 build system">Build System</a> where you can create your own command and run it by using <strong>cmb+b</strong> (If you are a MAC user).</p>

<p>First thing first, I hope you use <strong>rvm</strong> so if you haven&#8217;t done this already you need to create symbolic link like <a href="http://www.sublimetext.com/docs/2/osx_command_line.html">this page</a>. Then if you want to open your project you can just do this command inside your project. This way, sublime will hook up with rvm nicely.</p>

<pre><code class="bash">subl .
</code></pre>

<p>Then you go to <strong>Tools > Build System > New Build System</strong>. It will open a new editor then you place this code.</p>

<pre><code class="json">{
  "cmd": ["rspec", "-I ${file_path}", "$file"],
  "file_regex": "# ([A-Za-z:0-9_./ ]+rb):([0-9]+)",
  "working_dir": "${project_path:${folder:${file_path}}}",
  "selector": "source.ruby",

  "windows":
  {
    "cmd": ["rspec.bat", "-I ${file_path}", "$file"]
  }
}
</code></pre>

<p>Then you choose the new Build System you just created and hit this combo <strong>cmd+b</strong>. Hooray!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Call Haml Outside Sinatra or Rails?]]></title>
    <link href="http://www.noppanit.com/how-to-call-haml-outside-sinatra-or-rails/"/>
    <updated>2012-04-01T00:00:00-04:00</updated>
    <id>http://www.noppanit.com/how-to-call-haml-outside-sinatra-or-rails</id>
    <content type="html"><![CDATA[<p>People would think why would you want to do that. Well, in my case I just want to use haml to generate html for me in Test so that I could inject that in to Pusher to test the functionality of the feed page. I could use static html string, but if I change haml I don&#8217;t want to come back to the test and change the string again.</p>

<p>So, Haml actually is just a static class that you can call anywhere, but where you call inside Sinatra or Rails controller. You could just use</p>

<pre><code>haml :my_view
</code></pre>

<p>However, if you do this outside Sinatra, you would get an exception that haml is not found or something close.</p>

<p>So here&#8217;s just a simple solution plus I&#8217;ve added how to call helper in that as well.</p>

<pre><code class="ruby"> base = Class.new do
    include Sinatra::DateTimeHelper # This is the helper that you want to include in Haml.
  end.new

  _feed_partial_path = File.expand_path(File.join(File.dirname(__FILE__), "..", "..", "views", "_feed_partial.haml"))

  engine = Haml::Engine.new(IO.read(_feed_partial_path))
  rendered = engine.render(base, :var_to_inject =&gt; var_to_inject) # or if you don't want to use helper it could be just engine.render(Object.new, :var_to_inject =&gt; var_to_inject)
  puts rendered
</code></pre>

<p>That&#8217;s it nice and easy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby : Command-line Twitter Client Made Easy]]></title>
    <link href="http://www.noppanit.com/ruby-command-line-twitter-client-made-easy/"/>
    <updated>2011-02-27T00:00:00-05:00</updated>
    <id>http://www.noppanit.com/ruby-command-line-twitter-client-made-easy</id>
    <content type="html"><![CDATA[<p>Have you every told off that you&#8217;re playing in your work? Why do you have to open a browser twitter.com to be so obvious that you&#8217;re not doing your job well. Well, you can build a command-line twitter client very easy. So, you will be one of the geeks who use terminal all the time and your boss won&#8217;t know that you&#8217;re on twitter all the time.</p>

<p>I will start with installing Ruby and Gem, because I wanted to save time building this program from scratch as much as possible. So, a couples of useful gems would be really helpful.</p>

<p>if you&#8217;re new to ruby and use mac same as me, I suggest you install ruby by following this great article.<br/>
<a href="http://hivelogic.com/articles/ruby-rails-leopard">http://hivelogic.com/articles/ruby-rails-leopard</a></p>

<p>You can use a great application of all time like MacPort.</p>

<p>Ok! gem installed, ruby installed. Let&#8217;s start with installing some gems</p>

<pre><code class="bash">gem install twitter_oauth
</code></pre>

<p>If you need to know what OAuth is, I suggest you read this great article <a href="http://hueniverse.com/2007/10/beginners-guide-to-oauth-part-i-overview/">http://hueniverse.com/2007/10/beginners-guide-to-oauth-part-i-overview/</a></p>

<p>Basically, OAuth is a helper to help you login to twitter.com without exposing or sending your login details over the Internet. It&#8217;s like public and private key. But If you&#8217;re doing for a single-user like me, then you don&#8217;t have to worry anything about this. You just need 4 keys to access twitter APIs.</p>

<p>First, you will need to register your app with Twitter. Go to this page and follow the steps. <a href="http://twitter.com/apps">http://twitter.com/apps</a></p>

<p>Now you will need four keys to work, go to this page to get all those keys.<br/>
<a href="https://dev.twitter.com/apps">https://dev.twitter.com/apps</a></p>

<p>You will want, consumer_key, consumer_secret. You can get them from your application setting page, then click on My Access Token on the right-hand sided bar. Note down Access Token and Access Token Secret. Then you&#8217;re good to go.</p>

<pre><code class="ruby">#!/usr/bin/env ruby

require 'rubygems'
require 'twitter_oauth'

TWITTER_CONSUMER_KEY = 'Your Consumer Key'
TWITTER_CONSUMER_SECRET = 'Your Consumer Secret'
TWITTER_ACCESS_TOKEN = 'Your Access Token'
TWITTER_ACCESS_SECRET = 'Your Access Token Secret'

client = TwitterOAuth::Client.new(
  :consumer_key =&gt; TWITTER_CONSUMER_KEY,
  :consumer_secret =&gt; TWITTER_CONSUMER_SECRET,
  :token =&gt; TWITTER_ACCESS_TOKEN,
  :secret =&gt; TWITTER_ACCESS_SECRET)

case ARGV[]
 when "-l"
  timeline = client.home_timeline()
  timeline = timeline.reverse
  timeline.each{ |tweet| 
    puts tweet['text'] + " @FROM #{tweet['user']['name']}"
    puts "\n"
  }
 when "-u"
  if ARGV[1].nil?
    puts "Please enter your status:"
    status = STDIN.readline.chomp
    client.update("#{status}")
  else
    client.update("#{ARGV[1]}")
  end
 when "-m"
  mentions = client.mentions()
  mentions = mentions.reverse
  mentions.each{ |tweet| 
    puts tweet['text'] + " @FROM #{tweet['user']['name']}"
    puts "\n"
  }
end
</code></pre>

<p>This is just an example of my application which I use it on terminal. You can run the app by typing</p>

<pre><code class="bash">ruby thenameofthisapplication.rb
</code></pre>

<p>or you can use symbolic link to /usr/bin and type</p>

<pre><code class="bash">./thenameofthisapplication
</code></pre>

<p>It&#8217;s totally up to you.</p>

<p>The Ruby API I used in this example is from this <a href="https://github.com/moomerman/twitter_oauth">https://github.com/moomerman/twitter_oauth</a></p>

<p>And this is the Twitter API that you can have a look.<br/>
<a href="http://apiwiki.twitter.com/w/page/22554679/Twitter-API-Documentation">http://apiwiki.twitter.com/w/page/22554679/Twitter-API-Documentation</a></p>

<p>In this way, you can design your application to be whatever you want and when you&#8217;re at work, you&#8217;ll be on terminal on the time.</p>

<p>Good luck!</p>
]]></content>
  </entry>
  
</feed>
